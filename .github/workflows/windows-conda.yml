name: CI - Windows via Conda
on:
  push:
    paths-ignore:
      - 'doc/**'
      - 'scripts/**'
      - '.gitlab-ci.yml'
      - '.gitignore'
      - '*.md'
      - 'CITATION.cff'
      - 'CITATIONS.bib'
  pull_request:
    paths-ignore:
      - 'doc/'
      - 'scripts/'
      - '.gitlab-ci.yml'
      - '.gitignore'
      - '*.md'
      - 'CITATION.cff'
      - 'CITATIONS.bib'

jobs:
  build:
    name: ${{ matrix.os }} - ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    env:
      CCACHE_BASEDIR: "${GITHUB_WORKSPACE}"
      CCACHE_DIR: "${GITHUB_WORKSPACE}/.ccache"
      CCACHE_COMPRESS: true
      CCACHE_COMPRESSLEVEL: 6

    strategy:
      fail-fast: false
      matrix:
        os: ["windows-2019"]
        compiler: ["cl", "clang-cl"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/cache@v3
      with:
        path: .ccache
        key: ccache-windows-conda-${{ matrix.compiler }}-${{ matrix.os }}-${{ github.sha }}
        restore-keys: ccache-windows-conda-${{ matrix.compiler }}-${{ matrix.os }}-

    - uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: proxsuite-nlp
        auto-update-conda: true
        environment-file: .github/workflows/conda/environment_windows.yml
        python-version: "3.10"
        auto-activate-base: false

    - name: Build proxsuite-nlp
      shell: cmd /C CALL {0}
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.compiler }}
      run: |
        call conda list

        call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64

        :: Create build directory
        mkdir build
        pushd build

        :: Configure (Ninja use CC and CXXÂ to determine the compiler)
        cmake ^
          -G "Ninja" ^
          -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX%\Library ^
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ^
          -DCMAKE_BUILD_TYPE=Release ^
          -DPYTHON_SITELIB=%CONDA_PREFIX%\Lib\site-packages ^
          -DPYTHON_EXECUTABLE=%CONDA_PREFIX%\python.exe ^
          -DBUILD_PYTHON_INTERFACE=ON ^
          -DGENERATE_PYTHON_STUBS=ON ^
          -DBUILD_BENCHMARK=ON ^
          ..

        :: Build
        cmake --build .
        if errorlevel 1 exit 1

        :: Testing
        ctest --output-on-failure
        if errorlevel 1 exit 1

        :: Install
        cmake --install .

        :: Test Python import
        cd ..
        python -c "import proxsuite_nlp"
        if errorlevel 1 exit 1

  check:
    if: always()
    name: check-windows-conda

    needs:
    - build

    runs-on: Ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
