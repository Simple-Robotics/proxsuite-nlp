name: CI - OSX/Linux via Conda

on: [push,pull_request]

jobs:
  proxsuite-nlp-conda:
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }} ${{ matrix.build_type }} ${{ matrix.cxx_options }}
    runs-on: ${{ matrix.os }}
    env:
      CCACHE_BASEDIR: "${GITHUB_WORKSPACE}"
      CCACHE_DIR: "${GITHUB_WORKSPACE}/.ccache"
      CCACHE_COMPRESS: true
      CCACHE_COMPRESSLEVEL: 6

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        build_type: [Release, Debug]
        python-version: ["3.8", "3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/cache@v3
      with:
        path: .ccache
        key: ccache-conda-${{ matrix.os }}-${{ matrix.build_type }}

    - uses: prefix-dev/setup-pixi@v0.4.1
      with:
        pixi-version: v0.10.0
        cache: true

    - name: Build proxsuite-nlp
      shell: pixi run bash {0}
      run: |
        mkdir build
        cd build

        cmake .. \
          -GNinja \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
          -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DPYTHON_EXECUTABLE=$(which python3) \
          -DBUILD_PYTHON_INTERFACE=ON \
          -DGENERATE_PYTHON_STUBS=ON \
          -DBUILD_BENCHMARK=ON
        cmake --build .
        ctest --output-on-failure
        cmake --install .

    - name: Uninstall proxsuite-nlp
      shell: pixi run bash {0}
      run: |
        cd build
        cmake --build . --target uninstall

  check:
    if: always()
    name: check-macos-linux-conda

    needs:
    - proxsuite-nlp-conda

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
